==2692112== Memcheck, a memory error detector
==2692112== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2692112== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2692112== Command: ../build/iface/streami STREAMSettings_initial.h5
==2692112== Parent PID: 2651094
==2692112== 
==2692112== Invalid read of size 8
==2692112==    at 0x16893D: DREAM::ADASRateInterpolator::Eval(unsigned long, double, double) (ADASRateInterpolator.cpp:95)
==2692112==    by 0x151E74: STREAM::IonRateEquation::SetCSVectorElements(double*, double const*, unsigned long, unsigned long, unsigned long) (IonRateEquation.set.cpp:81)
==2692112==    by 0x144CD4: DREAM::IonEquationTerm<DREAM::FVM::EquationTerm>::SetVectorElements(double*, double const*) (IonEquationTerm.tcc:109)
==2692112==    by 0x289CD1: DREAM::FVM::Operator::SetVectorElements(double*, double const*) (Operator.cpp:396)
==2692112==    by 0x1A21B4: DREAM::UnknownQuantityEquation::SetVectorElements(double*, DREAM::FVM::UnknownQuantityHandler*) (UnknownQuantityEquation.cpp:158)
==2692112==    by 0x1F82AC: DREAM::Solver::BuildVector(double, double, double*, DREAM::FVM::BlockMatrix*) (Solver.cpp:181)
==2692112==    by 0x1FE494: DREAM::SolverNonLinear::TakeNewtonStep() (SolverNonLinear.cpp:328)
==2692112==    by 0x1FE06D: DREAM::SolverNonLinear::_InternalSolve() (SolverNonLinear.cpp:268)
==2692112==    by 0x1FDE85: DREAM::SolverNonLinear::Solve(double, double) (SolverNonLinear.cpp:234)
==2692112==    by 0x169C3B: DREAM::EquationSystem::Solve() (EquationSystem.cpp:204)
==2692112==    by 0x1A1807: DREAM::Simulation::Run() (Simulation.cpp:31)
==2692112==    by 0x128FAE: main (Main.cpp:208)
==2692112==  Address 0xc812f38 is 8 bytes after a block of size 16 alloc'd
==2692112==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2692112==    by 0x168408: DREAM::ADASRateInterpolator::ADASRateInterpolator(unsigned long, unsigned long, unsigned long, double const*, double const*, double const*, bool, gsl_interp2d_type const*) (ADASRateInterpolator.cpp:32)
==2692112==    by 0x1656B7: DREAM::ADAS::ADAS(gsl_interp2d_type const*) (ADAS.cpp:44)
==2692112==    by 0x1DAF13: DREAM::SimulationGenerator::LoadADAS(DREAM::Settings*) (Process.cpp:99)
==2692112==    by 0x12A9ED: STREAM::SimulationGenerator::ProcessSettings(DREAM::Settings*) (Process.cpp:54)
==2692112==    by 0x128F86: main (Main.cpp:203)
==2692112== 
==2692112== Invalid read of size 8
==2692112==    at 0x168981: DREAM::ADASRateInterpolator::Eval(unsigned long, double, double) (ADASRateInterpolator.cpp:99)
==2692112==    by 0x151E74: STREAM::IonRateEquation::SetCSVectorElements(double*, double const*, unsigned long, unsigned long, unsigned long) (IonRateEquation.set.cpp:81)
==2692112==    by 0x144CD4: DREAM::IonEquationTerm<DREAM::FVM::EquationTerm>::SetVectorElements(double*, double const*) (IonEquationTerm.tcc:109)
==2692112==    by 0x289CD1: DREAM::FVM::Operator::SetVectorElements(double*, double const*) (Operator.cpp:396)
==2692112==    by 0x1A21B4: DREAM::UnknownQuantityEquation::SetVectorElements(double*, DREAM::FVM::UnknownQuantityHandler*) (UnknownQuantityEquation.cpp:158)
==2692112==    by 0x1F82AC: DREAM::Solver::BuildVector(double, double, double*, DREAM::FVM::BlockMatrix*) (Solver.cpp:181)
==2692112==    by 0x1FE494: DREAM::SolverNonLinear::TakeNewtonStep() (SolverNonLinear.cpp:328)
==2692112==    by 0x1FE06D: DREAM::SolverNonLinear::_InternalSolve() (SolverNonLinear.cpp:268)
==2692112==    by 0x1FDE85: DREAM::SolverNonLinear::Solve(double, double) (SolverNonLinear.cpp:234)
==2692112==    by 0x169C3B: DREAM::EquationSystem::Solve() (EquationSystem.cpp:204)
==2692112==    by 0x1A1807: DREAM::Simulation::Run() (Simulation.cpp:31)
==2692112==    by 0x128FAE: main (Main.cpp:208)
==2692112==  Address 0xc812fd8 is 8 bytes after a block of size 16 alloc'd
==2692112==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2692112==    by 0x16846C: DREAM::ADASRateInterpolator::ADASRateInterpolator(unsigned long, unsigned long, unsigned long, double const*, double const*, double const*, bool, gsl_interp2d_type const*) (ADASRateInterpolator.cpp:34)
==2692112==    by 0x1656B7: DREAM::ADAS::ADAS(gsl_interp2d_type const*) (ADAS.cpp:44)
==2692112==    by 0x1DAF13: DREAM::SimulationGenerator::LoadADAS(DREAM::Settings*) (Process.cpp:99)
==2692112==    by 0x12A9ED: STREAM::SimulationGenerator::ProcessSettings(DREAM::Settings*) (Process.cpp:54)
==2692112==    by 0x128F86: main (Main.cpp:203)
==2692112== 
==2692112== Invalid read of size 8
==2692112==    at 0x168997: DREAM::ADASRateInterpolator::Eval(unsigned long, double, double) (ADASRateInterpolator.cpp:99)
==2692112==    by 0x151E74: STREAM::IonRateEquation::SetCSVectorElements(double*, double const*, unsigned long, unsigned long, unsigned long) (IonRateEquation.set.cpp:81)
==2692112==    by 0x144CD4: DREAM::IonEquationTerm<DREAM::FVM::EquationTerm>::SetVectorElements(double*, double const*) (IonEquationTerm.tcc:109)
==2692112==    by 0x289CD1: DREAM::FVM::Operator::SetVectorElements(double*, double const*) (Operator.cpp:396)
==2692112==    by 0x1A21B4: DREAM::UnknownQuantityEquation::SetVectorElements(double*, DREAM::FVM::UnknownQuantityHandler*) (UnknownQuantityEquation.cpp:158)
==2692112==    by 0x1F82AC: DREAM::Solver::BuildVector(double, double, double*, DREAM::FVM::BlockMatrix*) (Solver.cpp:181)
==2692112==    by 0x1FE494: DREAM::SolverNonLinear::TakeNewtonStep() (SolverNonLinear.cpp:328)
==2692112==    by 0x1FE06D: DREAM::SolverNonLinear::_InternalSolve() (SolverNonLinear.cpp:268)
==2692112==    by 0x1FDE85: DREAM::SolverNonLinear::Solve(double, double) (SolverNonLinear.cpp:234)
==2692112==    by 0x169C3B: DREAM::EquationSystem::Solve() (EquationSystem.cpp:204)
==2692112==    by 0x1A1807: DREAM::Simulation::Run() (Simulation.cpp:31)
==2692112==    by 0x128FAE: main (Main.cpp:208)
==2692112==  Address 0xc812f88 is 8 bytes after a block of size 16 alloc'd
==2692112==    at 0x483C583: operator new[](unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2692112==    by 0x16843A: DREAM::ADASRateInterpolator::ADASRateInterpolator(unsigned long, unsigned long, unsigned long, double const*, double const*, double const*, bool, gsl_interp2d_type const*) (ADASRateInterpolator.cpp:33)
==2692112==    by 0x1656B7: DREAM::ADAS::ADAS(gsl_interp2d_type const*) (ADAS.cpp:44)
==2692112==    by 0x1DAF13: DREAM::SimulationGenerator::LoadADAS(DREAM::Settings*) (Process.cpp:99)
==2692112==    by 0x12A9ED: STREAM::SimulationGenerator::ProcessSettings(DREAM::Settings*) (Process.cpp:54)
==2692112==    by 0x128F86: main (Main.cpp:203)
==2692112== 
==2692112== Invalid read of size 8
==2692112==    at 0x643C608: gsl_interp2d_eval_extrap (in /usr/lib/x86_64-linux-gnu/libgsl.so.23.1.0)
==2692112==    by 0x1689E3: DREAM::ADASRateInterpolator::Eval(unsigned long, double, double) (ADASRateInterpolator.cpp:99)
==2692112==    by 0x151E74: STREAM::IonRateEquation::SetCSVectorElements(double*, double const*, unsigned long, unsigned long, unsigned long) (IonRateEquation.set.cpp:81)
==2692112==    by 0x144CD4: DREAM::IonEquationTerm<DREAM::FVM::EquationTerm>::SetVectorElements(double*, double const*) (IonEquationTerm.tcc:109)
==2692112==    by 0x289CD1: DREAM::FVM::Operator::SetVectorElements(double*, double const*) (Operator.cpp:396)
==2692112==    by 0x1A21B4: DREAM::UnknownQuantityEquation::SetVectorElements(double*, DREAM::FVM::UnknownQuantityHandler*) (UnknownQuantityEquation.cpp:158)
==2692112==    by 0x1F82AC: DREAM::Solver::BuildVector(double, double, double*, DREAM::FVM::BlockMatrix*) (Solver.cpp:181)
==2692112==    by 0x1FE494: DREAM::SolverNonLinear::TakeNewtonStep() (SolverNonLinear.cpp:328)
==2692112==    by 0x1FE06D: DREAM::SolverNonLinear::_InternalSolve() (SolverNonLinear.cpp:268)
==2692112==    by 0x1FDE85: DREAM::SolverNonLinear::Solve(double, double) (SolverNonLinear.cpp:234)
==2692112==    by 0x169C3B: DREAM::EquationSystem::Solve() (EquationSystem.cpp:204)
==2692112==    by 0x1A1807: DREAM::Simulation::Run() (Simulation.cpp:31)
==2692112==  Address 0x38 is not stack'd, malloc'd or (recently) free'd
==2692112== 
==2692112== 
==2692112== Process terminating with default action of signal 11 (SIGSEGV)
==2692112==  Access not within mapped region at address 0x38
==2692112==    at 0x643C608: gsl_interp2d_eval_extrap (in /usr/lib/x86_64-linux-gnu/libgsl.so.23.1.0)
==2692112==    by 0x1689E3: DREAM::ADASRateInterpolator::Eval(unsigned long, double, double) (ADASRateInterpolator.cpp:99)
==2692112==    by 0x151E74: STREAM::IonRateEquation::SetCSVectorElements(double*, double const*, unsigned long, unsigned long, unsigned long) (IonRateEquation.set.cpp:81)
==2692112==    by 0x144CD4: DREAM::IonEquationTerm<DREAM::FVM::EquationTerm>::SetVectorElements(double*, double const*) (IonEquationTerm.tcc:109)
==2692112==    by 0x289CD1: DREAM::FVM::Operator::SetVectorElements(double*, double const*) (Operator.cpp:396)
==2692112==    by 0x1A21B4: DREAM::UnknownQuantityEquation::SetVectorElements(double*, DREAM::FVM::UnknownQuantityHandler*) (UnknownQuantityEquation.cpp:158)
==2692112==    by 0x1F82AC: DREAM::Solver::BuildVector(double, double, double*, DREAM::FVM::BlockMatrix*) (Solver.cpp:181)
==2692112==    by 0x1FE494: DREAM::SolverNonLinear::TakeNewtonStep() (SolverNonLinear.cpp:328)
==2692112==    by 0x1FE06D: DREAM::SolverNonLinear::_InternalSolve() (SolverNonLinear.cpp:268)
==2692112==    by 0x1FDE85: DREAM::SolverNonLinear::Solve(double, double) (SolverNonLinear.cpp:234)
==2692112==    by 0x169C3B: DREAM::EquationSystem::Solve() (EquationSystem.cpp:204)
==2692112==    by 0x1A1807: DREAM::Simulation::Run() (Simulation.cpp:31)
==2692112==  If you believe this happened as a result of a stack
==2692112==  overflow in your program's main thread (unlikely but
==2692112==  possible), you can try to increase the size of the
==2692112==  main thread stack using the --main-stacksize= flag.
==2692112==  The main thread stack size used in this run was 8388608.
==2692112== 
==2692112== HEAP SUMMARY:
==2692112==     in use at exit: 12,760,004 bytes in 25,092 blocks
==2692112==   total heap usage: 177,811 allocs, 152,719 frees, 42,786,942 bytes allocated
==2692112== 
==2692112== LEAK SUMMARY:
==2692112==    definitely lost: 8,138 bytes in 43 blocks
==2692112==    indirectly lost: 96,568 bytes in 71 blocks
==2692112==      possibly lost: 672 bytes in 2 blocks
==2692112==    still reachable: 12,654,626 bytes in 24,976 blocks
==2692112==                       of which reachable via heuristic:
==2692112==                         length64           : 140,236 bytes in 615 blocks
==2692112==                         newarray           : 3,376 bytes in 208 blocks
==2692112==                         multipleinheritance: 6,112 bytes in 20 blocks
==2692112==         suppressed: 0 bytes in 0 blocks
==2692112== Rerun with --leak-check=full to see details of leaked memory
==2692112== 
==2692112== For lists of detected and suppressed errors, rerun with: -s
==2692112== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
